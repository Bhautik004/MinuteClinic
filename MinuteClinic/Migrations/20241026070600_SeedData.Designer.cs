// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MinuteClinic.Models;

#nullable disable

namespace MinuteClinic.Migrations
{
    [DbContext(typeof(MinuteClinicContext))]
    [Migration("20241026070600_SeedData")]
    partial class SeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MinuteClinic.Models.Clinics", b =>
                {
                    b.Property<int>("ClinicId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClinicId"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ClinicName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<int>("ZipCode")
                        .HasColumnType("int");

                    b.HasKey("ClinicId");

                    b.ToTable("Clinics", (string)null);

                    b.HasData(
                        new
                        {
                            ClinicId = 1,
                            City = "Anytown",
                            ClinicName = "NY Clinic",
                            Location = "1234 Elm St",
                            State = "NY",
                            ZipCode = 12345
                        },
                        new
                        {
                            ClinicId = 2,
                            City = "Othertown",
                            ClinicName = "IL Clinic",
                            Location = "5678 Oak St",
                            State = "IL",
                            ZipCode = 45678
                        },
                        new
                        {
                            ClinicId = 3,
                            City = "Thirdtown",
                            ClinicName = "MI Clinic",
                            Location = "91011 Pine St",
                            State = "MI",
                            ZipCode = 90012
                        },
                        new
                        {
                            ClinicId = 4,
                            City = "Los Angeles",
                            ClinicName = "CA Health Center",
                            Location = "7890 Maple Ave",
                            State = "CA",
                            ZipCode = 90210
                        },
                        new
                        {
                            ClinicId = 5,
                            City = "Chicago",
                            ClinicName = "Downtown Clinic",
                            Location = "321 Cedar St",
                            State = "IL",
                            ZipCode = 60601
                        },
                        new
                        {
                            ClinicId = 6,
                            City = "Denver",
                            ClinicName = "Westside Clinic",
                            Location = "654 Spruce St",
                            State = "CO",
                            ZipCode = 80202
                        },
                        new
                        {
                            ClinicId = 7,
                            City = "San Francisco",
                            ClinicName = "Bay Area Clinic",
                            Location = "987 Redwood Rd",
                            State = "CA",
                            ZipCode = 94102
                        },
                        new
                        {
                            ClinicId = 8,
                            City = "Miami",
                            ClinicName = "South Beach Clinic",
                            Location = "111 Ocean Dr",
                            State = "FL",
                            ZipCode = 33139
                        });
                });

            modelBuilder.Entity("MinuteClinic.Models.Provider", b =>
                {
                    b.Property<int>("ProviderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProviderId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ProviderId");

                    b.ToTable("Provider", (string)null);

                    b.HasData(
                        new
                        {
                            ProviderId = 1,
                            Address = "NY",
                            Name = "Moderna"
                        },
                        new
                        {
                            ProviderId = 2,
                            Address = "UK",
                            Name = "AstraZeneca"
                        },
                        new
                        {
                            ProviderId = 3,
                            Address = "IL",
                            Name = "Pfizer"
                        },
                        new
                        {
                            ProviderId = 4,
                            Address = "NJ",
                            Name = "Johnson & Johnson"
                        },
                        new
                        {
                            ProviderId = 5,
                            Address = "China",
                            Name = "Sinopharm"
                        },
                        new
                        {
                            ProviderId = 6,
                            Address = "Germany",
                            Name = "BioNTech"
                        },
                        new
                        {
                            ProviderId = 7,
                            Address = "France",
                            Name = "Sanofi"
                        },
                        new
                        {
                            ProviderId = 8,
                            Address = "Germany",
                            Name = "CureVac"
                        });
                });

            modelBuilder.Entity("MinuteClinic.Models.Vaccine", b =>
                {
                    b.Property<int>("VaccineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VaccineId"));

                    b.Property<string>("AvailableTimeSlots")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClinicId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("ProviderId")
                        .HasColumnType("int");

                    b.Property<string>("VaccineImage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VaccineId");

                    b.HasIndex("ClinicId");

                    b.HasIndex("ProviderId");

                    b.ToTable("Vaccine", (string)null);
                });

            modelBuilder.Entity("MinuteClinic.Models.Vaccine", b =>
                {
                    b.HasOne("MinuteClinic.Models.Clinics", "Clinic")
                        .WithMany()
                        .HasForeignKey("ClinicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MinuteClinic.Models.Provider", "Providers")
                        .WithMany()
                        .HasForeignKey("ProviderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clinic");

                    b.Navigation("Providers");
                });
#pragma warning restore 612, 618
        }
    }
}
